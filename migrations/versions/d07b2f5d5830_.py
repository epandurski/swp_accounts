"""empty message

Revision ID: d07b2f5d5830
Revises: 1d4014e82e4f
Create Date: 2019-07-28 16:14:45.282696

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd07b2f5d5830'
down_revision = '1d4014e82e4f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_comment(
        'pending_change',
        'Changes to account record amounts are queued to this table. This allows multiple updates to one account to coalesce, thus reducing the lock contention.',
        existing_comment=None,
        schema=None
    )
    op.alter_column('prepared_transfer', 'coordinator_type',
               existing_type=sa.VARCHAR(length=30),
               comment='Indicates which subsystem has initiated the transfer and is responsible for finalizing it. The value must be a valid python identifier, all lowercase, no double underscores. Example: direct, interest, circular.',
               existing_comment='Indicates which subsystem has initiated the transfer and is responsible for finalizing it. The value must be a valid python identifier, all lowercase, no double underscores. Example: direct, circular.',
               existing_nullable=False)
    op.create_table_comment(
        'prepared_transfer',
        'A prepared transfer represent a guarantee that a particular transfer of funds will be successful if ordered (committed). A record will remain in this table until the transfer has been commited or dismissed.',
        existing_comment=None,
        schema=None
    )
    op.create_table_comment(
        'transfer_request',
        'Requests to create new `prepared_transfer` records are queued to this table. This allows multiple requests from one sender to be processed at once, reducing the lock contention on `account` records.',
        existing_comment=None,
        schema=None
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table_comment(
        'transfer_request',
        existing_comment='Requests to create new `prepared_transfer` records are queued to this table. This allows multiple requests from one sender to be processed at once, reducing the lock contention on `account` records.',
        schema=None
    )
    op.drop_table_comment(
        'prepared_transfer',
        existing_comment='A prepared transfer represent a guarantee that a particular transfer of funds will be successful if ordered (committed). A record will remain in this table until the transfer has been commited or dismissed.',
        schema=None
    )
    op.alter_column('prepared_transfer', 'coordinator_type',
               existing_type=sa.VARCHAR(length=30),
               comment='Indicates which subsystem has initiated the transfer and is responsible for finalizing it. The value must be a valid python identifier, all lowercase, no double underscores. Example: direct, circular.',
               existing_comment='Indicates which subsystem has initiated the transfer and is responsible for finalizing it. The value must be a valid python identifier, all lowercase, no double underscores. Example: direct, interest, circular.',
               existing_nullable=False)
    op.drop_table_comment(
        'pending_change',
        existing_comment='Changes to account record amounts are queued to this table. This allows multiple updates to one account to coalesce, thus reducing the lock contention.',
        schema=None
    )
    # ### end Alembic commands ###
