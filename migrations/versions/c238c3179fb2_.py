"""empty message

Revision ID: c238c3179fb2
Revises: 
Create Date: 2019-05-05 18:14:21.102090

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c238c3179fb2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account_change_signal',
    sa.Column('debtor_id', sa.BigInteger(), nullable=False),
    sa.Column('creditor_id', sa.BigInteger(), nullable=False),
    sa.Column('change_seqnum', sa.BigInteger(), nullable=False),
    sa.Column('change_ts', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('balance', sa.BigInteger(), nullable=False),
    sa.Column('concession_interest_rate', sa.REAL(), nullable=False),
    sa.Column('interest_rate', sa.REAL(), nullable=False),
    sa.Column('interest_rate_floor', sa.REAL(), nullable=False),
    sa.PrimaryKeyConstraint('debtor_id', 'creditor_id', 'change_seqnum')
    )
    op.create_table('committed_transfer_signal',
    sa.Column('debtor_id', sa.BigInteger(), nullable=False),
    sa.Column('prepared_transfer_seqnum', sa.BigInteger(), nullable=False),
    sa.Column('sender_creditor_id', sa.BigInteger(), nullable=False),
    sa.Column('recipient_creditor_id', sa.BigInteger(), nullable=False),
    sa.Column('transfer_type', sa.SmallInteger(), nullable=False),
    sa.Column('transfer_info', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('sender_locked_amount', sa.BigInteger(), nullable=False),
    sa.Column('prepared_at_ts', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('committed_at_ts', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('committed_amount', sa.BigInteger(), nullable=False),
    sa.CheckConstraint('committed_amount > 0 AND committed_amount <= amount'),
    sa.PrimaryKeyConstraint('debtor_id', 'prepared_transfer_seqnum')
    )
    op.create_table('debtor_policy',
    sa.Column('debtor_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('interest_rate', sa.REAL(), nullable=False),
    sa.Column('interest_rate_floor', sa.REAL(), nullable=False),
    sa.PrimaryKeyConstraint('debtor_id')
    )
    op.create_table('prepared_coordinated_transfer_signal',
    sa.Column('coordinator_id', sa.BigInteger(), nullable=False),
    sa.Column('coordinator_transfer_request_id', sa.BigInteger(), nullable=False),
    sa.Column('prepared_transfer_seqnum', sa.BigInteger(), nullable=False),
    sa.Column('prepared_at_ts', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('coordinator_id', 'coordinator_transfer_request_id')
    )
    op.create_table('prepared_direct_transfer_signal',
    sa.Column('sender_creditor_id', sa.BigInteger(), nullable=False),
    sa.Column('sender_transfer_request_id', sa.BigInteger(), nullable=False),
    sa.Column('prepared_transfer_seqnum', sa.BigInteger(), nullable=False),
    sa.Column('prepared_at_ts', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('sender_creditor_id', 'sender_transfer_request_id')
    )
    op.create_table('rejected_coordinated_transfer_signal',
    sa.Column('coordinator_id', sa.BigInteger(), nullable=False),
    sa.Column('coordinator_transfer_request_id', sa.BigInteger(), nullable=False),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('coordinator_id', 'coordinator_transfer_request_id')
    )
    op.create_table('rejected_direct_transfer_signal',
    sa.Column('sender_creditor_id', sa.BigInteger(), nullable=False),
    sa.Column('sender_transfer_request_id', sa.BigInteger(), nullable=False),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('sender_creditor_id', 'sender_transfer_request_id')
    )
    op.create_table('account',
    sa.Column('debtor_id', sa.BigInteger(), nullable=False),
    sa.Column('creditor_id', sa.BigInteger(), nullable=False),
    sa.Column('concession_interest_rate', sa.REAL(), nullable=False),
    sa.Column('balance', sa.BigInteger(), nullable=False, comment='The total owed amount'),
    sa.Column('interest', sa.BigInteger(), nullable=False, comment='The amount of interest accumulated on the account. Can be negative. Interest accumulates at an annual rate (in percents) that is equal to the maximum of the following values: `account.concession_interest_rate`, `debtor_policy.interest_rate`, `debtor_policy.interest_rate_floor`.'),
    sa.Column('avl_balance', sa.BigInteger(), nullable=False, comment='The `balance`, plus `interest`, minus pending transfer locks'),
    sa.Column('last_change_seqnum', sa.BigInteger(), nullable=False, comment='Incremented on every change in `balance`, `concession_interest_rate`, `debtor_policy.interest_rate`, or `debtor_policy.interest_rate_floor`.'),
    sa.Column('last_change_ts', sa.TIMESTAMP(timezone=True), nullable=False, comment='Updated on every increment of `last_change_seqnum`.'),
    sa.Column('last_activity_ts', sa.TIMESTAMP(timezone=True), nullable=False, comment='Updated on every account activity. Can be used to remove stale accounts.'),
    sa.ForeignKeyConstraint(['debtor_id'], ['debtor_policy.debtor_id'], ),
    sa.PrimaryKeyConstraint('debtor_id', 'creditor_id')
    )
    op.create_table('prepared_transfer',
    sa.Column('debtor_id', sa.BigInteger(), nullable=False),
    sa.Column('prepared_transfer_seqnum', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('sender_creditor_id', sa.BigInteger(), nullable=False),
    sa.Column('recipient_creditor_id', sa.BigInteger(), nullable=False),
    sa.Column('transfer_type', sa.SmallInteger(), nullable=False, comment='1 -- direct transfer, 2 -- coordinated transfer '),
    sa.Column('transfer_info', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('sender_locked_amount', sa.BigInteger(), nullable=False),
    sa.Column('prepared_at_ts', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.CheckConstraint('amount >= 0'),
    sa.CheckConstraint('sender_locked_amount >= 0'),
    sa.ForeignKeyConstraint(['debtor_id', 'sender_creditor_id'], ['account.debtor_id', 'account.creditor_id'], ),
    sa.PrimaryKeyConstraint('debtor_id', 'prepared_transfer_seqnum')
    )
    op.create_index('idx_prepared_transfer_sender_creditor_id', 'prepared_transfer', ['debtor_id', 'sender_creditor_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_prepared_transfer_sender_creditor_id', table_name='prepared_transfer')
    op.drop_table('prepared_transfer')
    op.drop_table('account')
    op.drop_table('rejected_direct_transfer_signal')
    op.drop_table('rejected_coordinated_transfer_signal')
    op.drop_table('prepared_direct_transfer_signal')
    op.drop_table('prepared_coordinated_transfer_signal')
    op.drop_table('debtor_policy')
    op.drop_table('committed_transfer_signal')
    op.drop_table('account_change_signal')
    # ### end Alembic commands ###
