"""empty message

Revision ID: 4709625c39f7
Revises: 
Create Date: 2019-05-04 16:11:53.235104

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4709625c39f7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('debtor',
    sa.Column('debtor_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('demurrage_rate', sa.REAL(), nullable=False),
    sa.Column('demurrage_rate_ceiling', sa.REAL(), nullable=False),
    sa.CheckConstraint('demurrage_rate >= 0'),
    sa.CheckConstraint('demurrage_rate_ceiling >= 0'),
    sa.PrimaryKeyConstraint('debtor_id')
    )
    op.create_table('transaction_signal',
    sa.Column('debtor_id', sa.BigInteger(), nullable=False),
    sa.Column('prepared_transfer_seqnum', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('sender_creditor_id', sa.BigInteger(), nullable=False),
    sa.Column('recipient_creditor_id', sa.BigInteger(), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('transaction_info', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('committed_at_ts', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('debtor_id', 'prepared_transfer_seqnum')
    )
    op.create_table('account',
    sa.Column('debtor_id', sa.BigInteger(), nullable=False),
    sa.Column('creditor_id', sa.BigInteger(), nullable=False),
    sa.Column('discount_demurrage_rate', sa.REAL(), nullable=False),
    sa.Column('balance', sa.BigInteger(), nullable=False, comment='The total owed amount'),
    sa.Column('demurrage', sa.BigInteger(), nullable=False, comment='This is the amount of negative interest accumulated on the account. Demurrage accumulates at an annual rate (in percents) that is equal to the minimum of the following values: `account.discount_demurrage_rate`, `debtor.demurrage_rate`, `debtor.demurrage_rate_ceiling`.'),
    sa.Column('avl_balance', sa.BigInteger(), nullable=False, comment='The total owed amount, minus demurrage, minus pending transfer locks'),
    sa.Column('last_transfer_ts', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('last_change_seqnum', sa.BigInteger(), nullable=False, comment='This is incremented on every change. Zero indicates a deactivated account.'),
    sa.CheckConstraint('demurrage >= 0'),
    sa.CheckConstraint('discount_demurrage_rate >= 0'),
    sa.ForeignKeyConstraint(['debtor_id'], ['debtor.debtor_id'], ),
    sa.PrimaryKeyConstraint('debtor_id', 'creditor_id')
    )
    op.create_table('prepared_transfer',
    sa.Column('debtor_id', sa.BigInteger(), nullable=False),
    sa.Column('prepared_transfer_seqnum', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('sender_creditor_id', sa.BigInteger(), nullable=False),
    sa.Column('recipient_creditor_id', sa.BigInteger(), nullable=False),
    sa.Column('transfer_type', sa.SmallInteger(), nullable=False, comment='1 -- circular transfer, 2 -- direct transfer, 3 -- third party transfer '),
    sa.Column('transfer_info', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('sender_locked_amount', sa.BigInteger(), nullable=False),
    sa.Column('prepared_at_ts', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.CheckConstraint('amount >= 0'),
    sa.CheckConstraint('sender_locked_amount >= 0'),
    sa.ForeignKeyConstraint(['debtor_id', 'sender_creditor_id'], ['account.debtor_id', 'account.creditor_id'], ),
    sa.PrimaryKeyConstraint('debtor_id', 'prepared_transfer_seqnum')
    )
    op.create_index('idx_prepared_transfer_sender_creditor_id', 'prepared_transfer', ['debtor_id', 'sender_creditor_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_prepared_transfer_sender_creditor_id', table_name='prepared_transfer')
    op.drop_table('prepared_transfer')
    op.drop_table('account')
    op.drop_table('transaction_signal')
    op.drop_table('debtor')
    # ### end Alembic commands ###
